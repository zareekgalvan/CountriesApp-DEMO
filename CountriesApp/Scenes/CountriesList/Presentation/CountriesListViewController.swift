//
//  CountriesListViewController.swift
//  CountriesApp
//
//  Created by Cesar Armando on 11/11/19.
//  Copyright (c) 2019 Cesar Armando. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CountriesListDisplayLogic: class {
    var viewModel: [Country] { get set }
}

class CountriesListViewController: UIViewController, CountriesListDisplayLogic {
    
    @IBOutlet weak var countrySearchBar: UISearchBar!
    @IBOutlet weak var countryTableView: UITableView!
    
    var interactor: CountriesListBusinessLogic?
    var router: (NSObjectProtocol & CountriesListRoutingLogic & CountriesListDataPassing)?
    
    var viewModel = [Country]()  {
        didSet {
            self.filteredCountries = viewModel
        }
    }
    
    var filteredCountries = [Country]() {
        didSet {
            self.countryTableView.reloadData()
        }
    }
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    private func setup() {
        let viewController = self
        let interactor = CountriesListInteractor()
        let presenter = CountriesListPresenter()
        let router = CountriesListRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "Countries"
        self.countryTableView.register(UINib(nibName: "\(CountryTableViewCell.self)", bundle: nil), forCellReuseIdentifier: "\(CountryTableViewCell.self)")
        self.countryTableView.dataSource = self
        self.countryTableView.delegate = self
        self.countrySearchBar.delegate = self
        self.navigationController?.navigationBar.layer.borderColor = UIColor.appColor().cgColor
        self.navigationController?.navigationBar.layer.borderWidth = 10.0
        self.countrySearchBar.layer.borderColor = UIColor.appColor().cgColor
        self.countrySearchBar.layer.borderWidth = 10.0
        loadCountries()
    }
    
    func loadCountries() {
        interactor?.getCountries()
    }
}
